apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service-{{ .Release.Name }}
  labels:
    app: auth-service-{{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: auth-service-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: auth-service-{{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: auth-service
          image: {{ .Values.image | quote }}
          {{ if .Values.smtp.enabled }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 70
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 70
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          {{ end }}
          ports:
            - containerPort: 8080
              name: auth-port
          volumeMounts:
            - name: config
              mountPath: /application.yaml
              subPath: application.yaml
            {{ if eq .Values.storage.type "local" }}
            - name: auth-data
              mountPath: /upload/auth
            {{ end }}
      initContainers:
        - name: init-cache
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc -z auth-cache-{{ .Release.Name }} 6379; do echo waiting for cache; sleep 2; done" ]
        - name: init-database
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc -z auth-database-{{ .Release.Name }} 3306; do echo waiting for database; sleep 2; done" ]
      volumes:
        - name: config
          configMap:
            name: auth-service-config-{{ .Release.Name }}
            items:
              - key: application.yaml
                path: application.yaml
        {{ if eq .Values.storage.type "local" }}
        - name: auth-data
          persistentVolumeClaim:
            claimName: auth-data-{{ .Release.Name }}
        {{ end }}
{{ if eq .Values.storage.type "local" }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-data-{{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.storage }}
{{ end }}